

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Create";
}

@model Webapp.ViewModel.TaskList

<h2>Create or Update Task</h2>
<hr />


@using (@Html.BeginForm("Save", "Task"))
{


    <div class="form-group">
        @Html.LabelFor(m => m.Type)<br />
        @Html.DropDownListFor(m => m.Type, Model.tasktype.Select(city => new SelectListItem()
   {
       Text = city,
       Value = city,
       Selected = city == Model.Type
   }))
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.TaskName)
        @Html.TextBoxFor(m => m.TaskName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Comments)
        @Html.TextBoxFor(m => m.Comments, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.AssignedUser)<br />
        @Model.AssignedUser
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Status)<br />
        @Html.DropDownListFor(m => m.Status, Model.Statuslist.Select(city => new SelectListItem()
  {
      Text = city,
      Value = city,
      Selected = city == Model.Status
  }))
    </div>



    @Html.HiddenFor(m => m.ID)

    var c = @Model.ID > 0 ? "Update" : "Save";
    <button type="submit" class="btn btn-primary">@c</button>
}


